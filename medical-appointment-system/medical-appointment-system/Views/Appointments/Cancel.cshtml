@model medical_appointment_system.Models.Appointment

@{
    ViewBag.Title = "Cancelar cita";

    var user = Session["user"] as medical_appointment_system.Models.User;
    var isDoctor = user?.Roles?.Contains("medico", StringComparer.OrdinalIgnoreCase) == true;
    var isPatient = user?.Roles?.Contains("paciente", StringComparer.OrdinalIgnoreCase) == true;

    var culture = new System.Globalization.CultureInfo("es-PE");
    var formattedDate = Model.Date.ToString("dd MMM yyyy", culture);
    var startTime = DateTime.Today.Add(Model.Time);
    var endTime = startTime.AddHours(1);
    var formattedSchedule = $"{startTime:hh:mm tt} - {endTime:hh:mm tt}";

    var status = Model.Status?.ToLower() ?? "";
    var statusBadge = "";
    var statusIcon = "";
    var statusText = char.ToUpper(status[0]) + status.Substring(1);

    if (status == "pendiente")
    {
        statusBadge = "bg-warning-subtle border-warning-subtle text-warning-emphasis";
        statusIcon = "fa-hourglass-half";
    }
    else if (status == "confirmada")
    {
        statusBadge = "bg-primary-subtle border-primary-subtle text-primary-emphasis";
        statusIcon = "fa-calendar-check";
    }

    var type = Model.ConsultationType?.ToLower() ?? "";
    var typeIcon = "fa-question-circle";

    switch (type)
    {
        case "consulta":
            typeIcon = "fa-stethoscope";
            break;
        case "examen":
            typeIcon = "fa-file-waveform";
            break;
        case "operacion":
            typeIcon = "fa-syringe";
            break;
    }

    var typeText = char.ToUpper(type[0]) + type.Substring(1);

    var routeBack = status == "pendiente" ? "Pending" : "MyAppointments";
}

<h4 class="mb-4 text-center text-body-emphasis">
    <i class="fa-solid fa-circle-exclamation me-1 text-danger"></i>
    ¿Estás seguro de que deseas cancelar esta cita?
</h4>

<div class="container">
    <div class="row">
        <dl class="row">
            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.AppointmentId)</dt>
                <dd>
                    <span class="badge bg-body-tertiary text-body-emphasis border">@Model.AppointmentId</span>
                </dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.SpecialtyName)</dt>
                <dd>
                    <span class="badge bg-body-tertiary text-body-emphasis border">@Model.SpecialtyName</span>
                </dd>
            </div>

            @if (!isDoctor)
            {
                <div class="col-md-6 mb-3">
                    <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.DoctorName)</dt>
                    <dd class="text-body">@Html.DisplayFor(m => m.DoctorName)</dd>
                </div>
            }

            @if (!isPatient)
            {
                <div class="col-md-6 mb-3">
                    <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.PatientName)</dt>
                    <dd class="text-body">@Html.DisplayFor(m => m.PatientName)</dd>
                </div>
            }

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.ConsultationType)</dt>
                <dd>
                    <span class="badge bg-body-tertiary text-body-emphasis border">
                        <i class="fa-solid @typeIcon me-1"></i>
                        @typeText
                    </span>
                </dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Date)</dt>
                <dd class="text-body">@formattedDate</dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Time)</dt>
                <dd class="text-body">@formattedSchedule</dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Symptoms)</dt>
                <dd class="text-body">@Html.DisplayFor(m => m.Symptoms)</dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Status)</dt>
                <dd>
                    <span class="badge rounded-pill border @statusBadge">
                        <i class="fa-solid @statusIcon me-1"></i>
                        @statusText
                    </span>
                </dd>
            </div>
        </dl>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="d-flex justify-content-end gap-2 mt-4">
        <a href="@Url.Action(routeBack)" class="btn">
            <i class="fa-solid fa-left-long me-1"></i>
            Volver
        </a>

        <button type="submit" class="btn btn-danger">
            <i class="fa-solid fa-ban me-1"></i>
            Cancelar
        </button>
    </div>
}