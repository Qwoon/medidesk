@using medical_appointment_system.Models
@model List<Schedule>

@{
    ViewBag.Title = "Horarios";
    var diasSemana = Model.Select(m => m.Weekday).Distinct().ToList();
}

<h4 class="text-center mb-3 text-body-emphasis">
    <i class="fa-solid fa-calendar-week me-1"></i>
    Horarios
</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @foreach (var dia in diasSemana)
        {
            var horariosDelDia = Model.Where(m => m.Weekday == dia).ToList();

            <div class="row align-items-center mb-4">
                <div class="col-md-2 fw-bold text-uppercase">
                    @dia
                </div>

                @for (int i = 0; i < horariosDelDia.Count; i++)
                {
                    var idx = Model.IndexOf(horariosDelDia[i]);
                    var clasePanel = horariosDelDia[i].IsActive ? "" : "horario-inactivo";

                    <div class="col-md-5">
                        <div class="panel panel-default @clasePanel" data-index="@idx">
                            <div class="panel-body">
                                @Html.HiddenFor(m => m[idx].DoctorId)
                                @Html.HiddenFor(m => m[idx].Weekday)
                                @Html.HiddenFor(m => m[idx].DayWorkShift)

                                <div class="form-group mb-2">
                                    <div class="checkbox">
                                        @Html.EditorFor(m => m[idx].IsActive)
                                        <label class="control-label ms-1">
                                            @horariosDelDia[i].DayWorkShift
                                        </label>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m[idx].StartTime, htmlAttributes: new { @class = "control-label" })
                                    <input type="time"
                                           name="[@idx].StartTime"
                                           class="form-control"
                                           step="3600"
                                           value="@(horariosDelDia[i].StartTime.ToString(@"hh\:mm"))"
                                           min="00:00" max="23:00" />
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m[idx].EndTime, htmlAttributes: new { @class = "control-label" })
                                    <input type="time"
                                           name="[@idx].EndTime"
                                           class="form-control"
                                           step="3600"
                                           value="@(horariosDelDia[i].EndTime.ToString(@"hh\:mm"))"
                                           min="01:00" max="23:59" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        <div class="form-group text-center">
            <input type="submit" value="Guardar Horarios" class="btn btn-primary" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Formatear tiempo a HH:00
            document.querySelectorAll('input[type="time"]').forEach(input => {
                input.addEventListener("change", () => {
                    const [hour] = input.value.split(":");
                    input.value = `${hour.padStart(2, '0')}:00`;
                });
            });

            // Aplicar opacidad a paneles inactivos
            document.querySelectorAll('input[type="checkbox"][name$=".IsActive"]').forEach((checkbox, index) => {
                checkbox.addEventListener("change", function () {
                    const panel = document.querySelector(`div.panel[data-index="${index}"]`);
                    if (this.checked) {
                        panel.classList.remove("horario-inactivo");
                    } else {
                        panel.classList.add("horario-inactivo");
                    }
                });
            });
        });
    </script>
}

<style>
    .horario-inactivo {
        opacity: 0.4;
        transition: opacity 0.3s ease;
    }
</style>
