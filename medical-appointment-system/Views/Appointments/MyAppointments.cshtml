@model IEnumerable<medical_appointment_system.Models.Appointment>

@{
    ViewBag.Title = "Mis citas";

    var user = Session["user"] as medical_appointment_system.Models.User;
    var isDoctor = string.Equals(user?.ActiveRole, "medico", StringComparison.OrdinalIgnoreCase);
    var isPatient = string.Equals(user?.ActiveRole, "paciente", StringComparison.OrdinalIgnoreCase);

    var culture = new System.Globalization.CultureInfo("es-PE");
}

<h4 class="text-center mb-3 text-body-emphasis">
    <i class="fa-solid fa-calendar-days me-1"></i>
    Mis citas
</h4>

<div class="mb-3">
    <button type="button" class="btn btn-danger me-1" data-export onclick="location.href='@Url.Action("ExportToPDF")'" disabled>
        <i class="fa-solid fa-file-pdf me-1"></i>
        PDF
    </button>

    <button type="button" class="btn btn-success" data-export onclick="location.href='@Url.Action("ExportToExcel")'" disabled>
        <i class="fa-solid fa-file-excel me-1"></i>
        Excel
    </button>
</div>

<div id="spinnerLoad" class="d-flex justify-content-center align-items-center my-5">
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
</div>

<section id="tableContainer" class="d-none">
    <table id="appointmentTable" class="table mb-0">
        <thead>
            <tr>
                <th class="text-start">@Html.DisplayNameFor(model => model.AppointmentId)</th>
                <th class="text-start">@Html.DisplayNameFor(model => model.SpecialtyName)</th>
                @if (!isDoctor)
                {
                    <th>@Html.DisplayNameFor(model => model.DoctorName)</th>
                }
                @if (!isPatient)
                {
                    <th>@Html.DisplayNameFor(model => model.PatientName)</th>
                }
                <th class="text-center">@Html.DisplayNameFor(model => model.ConsultationType)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.Date)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.Time)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.Status)</th>
                <th class="text-center"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var type = item.ConsultationType?.ToLower() ?? "";
                var icon = "fa-question-circle";
                var text = "Desconocido";

                switch (type)
                {
                    case "consulta":
                        icon = "fa-stethoscope";
                        text = "Consulta";
                        break;
                    case "examen":
                        icon = "fa-file-medical";
                        text = "Examen";
                        break;
                    case "operacion":
                        icon = "fa-syringe";
                        text = "Operación";
                        break;
                }

                var formattedDate = item.Date.ToString("dd MMM yyyy", culture);
                var startTime = DateTime.Today.Add(item.Time);
                var endTime = startTime.AddHours(1);
                <tr>
                    <td class="text-start">
                        <span class="badge bg-body-tertiary text-body-emphasis border">
                            @Html.DisplayFor(modelItem => item.AppointmentId)
                        </span>
                    </td>
                    <td class="text-start">
                        <span class="badge bg-body-tertiary text-body-emphasis border">
                            @Html.DisplayFor(modelItem => item.SpecialtyName)
                        </span>
                    </td>
                    @if (!isDoctor)
                    {
                        <td>@Html.DisplayFor(modelItem => item.DoctorName)</td>
                    }
                    @if (!isPatient)
                    {
                        <td>@Html.DisplayFor(modelItem => item.PatientName)</td>
                    }
                    <td class="text-center">
                        <span class="badge bg-body-tertiary text-body-emphasis border">
                            <i class="fa-solid @icon me-1"></i>
                            @text
                        </span>
                    </td>
                    <td class="text-center">@formattedDate</td>
                    <td class="text-center">
                        @startTime.ToString("hh:mm tt", culture) - @endTime.ToString("hh:mm tt", culture)
                    </td>
                    <td class="text-center">
                        <span class="badge bg-primary-subtle border border-primary-subtle text-primary-emphasis rounded-pill">
                            <i class="fa-solid fa-calendar-check me-1"></i>
                            @char.ToUpper(item.Status[0])@item.Status.Substring(1).ToLower()
                        </span>
                    </td>
                    <td class="text-center">
                        <a href="@Url.Action("Details", "Appointments", new { id = item.AppointmentId })" class="btn btn-secondary btn-sm" title="Detalles">
                            <i class="fa-solid fa-circle-info"></i>
                        </a>

                        @if (isDoctor)
                        {
                            <a href="@Url.Action("Attend", "Appointments", new { id = item.AppointmentId })" class="btn btn-secondary btn-sm" title="Atender">
                                <i class="fa-solid fa-user-doctor"></i>
                            </a>

                            <a href="@Url.Action("Cancel", "Appointments", new { id = item.AppointmentId })" class="btn btn-secondary btn-sm" title="Cancelar">
                                <i class="fa-solid fa-ban"></i>
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            initCustomDataTable('#appointmentTable');
        });
    </script>
}