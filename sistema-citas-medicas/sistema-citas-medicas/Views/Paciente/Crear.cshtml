@model sistema_citas_medicas.Models.Paciente

@{
    ViewBag.Title = "Crear paciente";
}

<h4 class="text-center mb-3 text-body-emphasis">
    <i class="fa-solid fa-circle-plus me-1"></i>
    Crear paciente
</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewBag.MensajeError != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fa-solid fa-circle-xmark me-1"></i>
            @ViewBag.MensajeError
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <p class="text-danger mb-3">
        * Obligatorio
    </p>

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Ingrese un(os) nombre(s)" })
            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.Apellido, new { @class = "form-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control", placeholder = "Ingrese un(os) apellido(s)" })
            @Html.ValidationMessageFor(m => m.Apellido, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            @Html.LabelFor(m => m.Correo, new { @class = "form-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", placeholder = "correo@ejemplo.com" })
            @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.Contraseña, new { @class = "form-label" })
            <span class="text-danger">*</span>
            <div class="input-group">
                @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control password-field", placeholder = "Ingrese una contraseña", data_toggle_id = "1" })
                <span class="input-group-text" style="cursor: pointer;" data-toggle-id="1">
                    <i class="fa-solid fa-eye icon"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            @Html.LabelFor(m => m.Telefono, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Telefono, new
            {
                @class = "form-control",
                type = "number",
                placeholder = "Ingrese un número de telefóno",
                min = "0"
            })
            @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.FechaNacimiento, new { @class = "form-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(m => m.FechaNacimiento, new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.FechaNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            @Html.LabelFor(m => m.FotoPerfil, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.FotoPerfil, new
            {
                @type = "file",
                @class = "form-control"
            })
            @Html.ValidationMessageFor(m => m.FotoPerfil, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.GrupoSanguineo, new { @class = "form-label" })
            @Html.DropDownListFor(m => m.GrupoSanguineo, new SelectList(new[] {
                new { Value = "A+", Text = "A+" }, new { Value = "A-", Text = "A-" },
                new { Value = "B+", Text = "B+" }, new { Value = "B-", Text = "B-" },
                new { Value = "AB+", Text = "AB+" }, new { Value = "AB-", Text = "AB-" },
                new { Value = "O+", Text = "O+" }, new { Value = "O-", Text = "O-" }
            }, "Value", "Text"), "Seleccione un grupo sanguíneo", new { @class = "form-select" })
            @Html.ValidationMessageFor(m => m.GrupoSanguineo, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(model => model.Rol, new { Value = "pacientes" })

    <div class="d-flex justify-content-end gap-2 mt-3">
        <a href="@Url.Action("Index")" class="btn btn-secondary">
            <i class="fa-solid fa-left-long me-1"></i>
            Volver
        </a>
        <button type="submit" class="btn btn-primary">
            <i class="fa-solid fa-circle-plus me-1"></i>
            Crear
        </button>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/password.js"></script>
}