@model sistema_citas_medicas.Models.Cita

@{
    ViewBag.Title = "Detalle cita";

    var usuario = Session["usuario"] as sistema_citas_medicas.Models.Usuario;
    var esPaciente = usuario?.Rol?.ToLower() == "pacientes";
    var esMedico = usuario?.Rol?.ToLower() == "medicos";

    var cultura = new System.Globalization.CultureInfo("es-PE");
    var fechaFormateada = Model.Fecha.ToString("dd MMM yyyy", cultura);
    var horaInicio = DateTime.Today.Add(Model.Hora);
    var horaFin = horaInicio.AddHours(1);
    var horarioFormateado = $"{horaInicio:hh:mm tt} - {horaFin:hh:mm tt}";

    var estado = Model.Estado?.ToLower() ?? "";
    var badgeEstado = "";
    var iconoEstado = "";
    var textoEstado = char.ToUpper(estado[0]) + estado.Substring(1);

    switch (estado)
    {
        case "atendida":
            badgeEstado = "bg-success-subtle border-success-subtle text-success-emphasis";
            iconoEstado = "fa-check";
            break;
        case "cancelada":
            badgeEstado = "bg-danger-subtle border-danger-subtle text-danger-emphasis";
            iconoEstado = "fa-ban";
            break;
        case "pendiente":
            badgeEstado = "bg-warning-subtle border-warning-subtle text-warning-emphasis";
            iconoEstado = "fa-hourglass-half";
            break;
        case "confirmada":
            badgeEstado = "bg-primary-subtle border-primary-subtle text-primary-emphasis";
            iconoEstado = "fa-calendar-check";
            break;
        default:
            badgeEstado = "bg-secondary-subtle border-secondary-subtle text-secondary-emphasis";
            iconoEstado = "fa-circle-question";
            break;
    }

    var tipo = Model.TipoConsulta?.ToLower() ?? "";
    var iconoTipo = "fa-question-circle";
    switch (tipo)
    {
        case "consulta":
            iconoTipo = "fa-stethoscope";
            break;
        case "examen":
            iconoTipo = "fa-file-waveform";
            break;
        case "operacion":
            iconoTipo = "fa-syringe";
            break;
    }
    var textoTipo = char.ToUpper(tipo[0]) + tipo.Substring(1);

    var rutaVolver = "HistorialdeCitas";
    if (estado == "pendiente")
    {
        rutaVolver = "CitasPendiente";
    }
    else if (estado == "confirmada")
    {
        rutaVolver = "CitasConfirmadas";
    }
}

<h4 class="mb-4 text-body-emphasis text-center">
    <i class="fa-solid fa-circle-info me-1"></i>
    Detalle cita
</h4>

<div class="container">
    <div class="row">
        <dl class="row">
            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.NomEspecialidad)</dt>
                <dd>
                    <span class="badge bg-body-tertiary text-body-emphasis border">@Model.NomEspecialidad</span>
                </dd>
            </div>

            @if (!esMedico)
            {
                <div class="col-md-6 mb-3">
                    <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.NomMedico)</dt>
                    <dd class="text-body">@Html.DisplayFor(m => m.NomMedico)</dd>
                </div>
            }

            @if (!esPaciente)
            {
                <div class="col-md-6 mb-3">
                    <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.NomPaciente)</dt>
                    <dd class="text-body">@Html.DisplayFor(m => m.NomPaciente)</dd>
                </div>
            }

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.TipoConsulta)</dt>
                <dd>
                    <span class="badge bg-body-tertiary text-body-emphasis border">
                        <i class="fa-solid @iconoTipo me-1"></i> @textoTipo
                    </span>
                </dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Fecha)</dt>
                <dd class="text-body">@fechaFormateada</dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">Horario de cita</dt>
                <dd class="text-body">@horarioFormateado</dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Sintomas)</dt>
                <dd class="text-body">@Html.DisplayFor(m => m.Sintomas)</dd>
            </div>

            <div class="col-md-6 mb-3">
                <dt class="text-body-emphasis">@Html.DisplayNameFor(m => m.Estado)</dt>
                <dd>
                    <span class="badge rounded-pill border @badgeEstado">
                        <i class="fa-solid @iconoEstado me-1"></i>
                        @textoEstado
                    </span>
                </dd>
            </div>
        </dl>
    </div>
</div>

<div class="d-flex justify-content-end gap-2 mt-4">
    <a href="@Url.Action(rutaVolver)" class="btn btn-secondary">
        <i class="fa-solid fa-left-long me-1"></i>
        Volver
    </a>
</div>
